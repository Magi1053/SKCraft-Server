#!/bin/bash
input="$([[ -f "$1" ]] && echo "$1" || echo "$(realpath .)")"
name=$(echo ${CI_PROJECT_PATH//\//_} | tr '[:upper:]' '[:lower:]')
clients="/deploy/clients"
server="/deploy/servers/$name"

function cleanup() {
  kill $(jobs -p)
  docker exec ${name} pkill stop >/dev/null
  exit 1
}

trap cleanup INT TERM KILL
echo ${name}

if [[ ! -z ${CI_PROJECT_PATH} ]]; then
    cd "$clients/modpacks/$CI_PROJECT_PATH"
    source ${CI_PROJECT_PATH_SLUG}.hash &>/dev/null
    NEW_HASH=$(cat ${CI_PROJECT_PATH_SLUG}.json | jq -c '.tasks[]' | sha256sum )
    [[ ${OLD_HASH} != ${NEW_HASH} ]] && STOP_MSG="Client Update Required"
    echo OLD_HASH=\"${NEW_HASH}\" > ${CI_PROJECT_PATH_SLUG}.hash
fi

if [[ "starting" != $(docker inspect --format="{{json .State.Health.Status}}" ${name} 2>/dev/null | xargs) ]]; then
  echo "Initializing stop countdown and waiting for server to stop."
  docker exec ${name} stop '' "$STOP_MSG" &
  docker wait ${name} >/dev/null &
  wait $!
else
  echo "Server still starting or already offline"
fi

echo "Ensuring container is stopped"
sleep 1
docker kill ${name} >/dev/null
docker wait ${name} >/dev/null

echo "Beginning server update"
cd ${server} || exit 1

echo "Installing forge"
rm -f forge-*-universal.jar
java -jar "${input}"/loaders/forge-*-installer.jar --installServer > /dev/null
rm -f forge-*-installer.jar.log

echo "Removing old mods"
rm -rf "$server/mods/"
"Copying new files"
java -cp "$clients/launcher-builder.jar" com.skcraft.launcher.builder.ServerCopyExport --source "$input/src" --dest "$server"

echo "Running search/replace"
for variable in $(compgen -e | grep -Ev "LANG|HOSTNAME|JAVA|PWD|HOME|TERM|SHLVL|PATH|GIT|CI_|FF_"); do
    substitution="${substitution}-e s|\${${variable}}|${!variable}|g "
done;
echo "(${substitution::-1})"
find . -type f -regex ".*\.\(cfg\|conf\)" | while read -r file; do
    sed -i ${substitution} ${file} 2>/dev/null
done

echo "Updating permissions"
#chmod +rw "$server" -R
chown 1000:1000 "$server" -R

echo "Starting server!"
docker start ${name} >/dev/null