#!/bin/sh
input="$([[ -f "$1" ]] && echo "$1" || echo "$(realpath .)")"
clients="/deploy/clients"
server="/deploy/servers/"${CI_PROJECT_PATH//\//_} | tr '[:upper:]' '[:lower:]'

function cleanup() {
  kill $(jobs -p)
  docker exec ${CONTAINER} pkill stop >/dev/null
  exit 1
}

trap cleanup INT TERM

if [[ ! -z ${CI_PROJECT_PATH} ]]; then
    cd "$clients/modpacks/$CI_PROJECT_PATH"
    source ${CI_PROJECT_PATH_SLUG}.hash &>/dev/null
    NEW_HASH=$(cat ${CI_PROJECT_PATH_SLUG}.json | jq -c '.tasks[]' | sha256sum )
    [[ ${OLD_HASH} != ${NEW_HASH} ]] && STOP_MSG="Client Update Required"
    echo OLD_HASH=\"${NEW_HASH}\" >> ${CI_PROJECT_PATH_SLUG}.hash
fi

if docker exec ${CONTAINER} healthcheck &>/dev/null; then
  echo "Initializing stop countdown and waiting for server to stop."
  docker exec ${CONTAINER} stop '' "$STOP_MSG" &
  docker wait ${CONTAINER} >/dev/null &
  wait $!
else
  echo "Server already offline"
fi

echo "Ensuring container is stopped"
sleep 1
docker kill ${CONTAINER} >/dev/null
docker wait ${CONTAINER} >/dev/null

echo "Beginning server update"
cd ${server}
sleep 5

rm -f forge-*-universal.jar
java -jar "${input}"/loaders/forge-*-installer.jar --installServer > /dev/null
rm -f forge-*-installer.jar.log

rm -rf "$server/mods/"
java -cp "$clients/launcher-builder.jar" com.skcraft.launcher.builder.ServerCopyExport --source "$input/src" --dest "$server"

#chmod +rw "$server" -R
chown 1000:1000 "$server" -R

echo "Starting server!"
docker start ${CONTAINER} >/dev/null