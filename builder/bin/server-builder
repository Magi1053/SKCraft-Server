#!/bin/bash
source setup_environment
input="$([[ -f "$1" ]] && echo "$1" || echo "$(realpath .)")"
container=$(echo ${CI_PROJECT_PATH//\//_} | tr '[:upper:]' '[:lower:]')
server="/deploy/servers/$container"

function cleanup() {
  kill $(jobs -p)
  docker exec ${container} pkill stop >/dev/null
  exit 1
}

trap cleanup INT TERM KILL
echo ${container}

cd "$clients/modpacks/$CI_PROJECT_PATH"
source ${CI_PROJECT_PATH_SLUG}.hash &>/dev/null
OLD_HASH=$(cat ${CI_PROJECT_PATH_SLUG}.hash)
echo "Old Client Hash: $OLD_HASH"
NEW_HASH=$(cat ${CI_PROJECT_PATH_SLUG}.json | jq -c '.tasks[]' | grep 'mods/' | sha256sum | awk '{ print $1 }' )
echo "New Client Hash: $NEW_HASH"
[[ ${OLD_HASH} != ${NEW_HASH} ]] && STOP_MSG="Client Update Required"

healthcheck=$(docker inspect --format="{{json .State.Health.Status}}" ${container} 2>/dev/null | xargs)
if [[ ${healthcheck} != "starting" ]]; then
  echo "Initializing stop countdown and waiting for server to stop."
  docker exec ${container} stop '' "$STOP_MSG" &
  docker wait ${container} >/dev/null &
  wait $!
else
  echo "Server still starting or already stopped"
fi

echo -n "$NEW_HASH" > ${CI_PROJECT_PATH_SLUG}.hash

echo "Ensuring container is stopped"
docker kill ${container} >/dev/null
sleep 1
docker wait ${container} >/dev/null

echo "Beginning server update"
cd ${server} || exit 1

echo -e "\nRemoving old files"
rm -rfv "$server/classpath/" "$server/mods/" "$server/coremods/" "$server/sponge/plugins/" "$server/scripts/"

echo -e "\nInstalling forge"
rm -f forge-*-universal.jar
java -jar "${input}"/loaders/forge-*-installer.jar --installServer #> /dev/null
rm -f forge-*-installer.jar.log

echo -e "\nGetting substitution"
for variable in $(compgen -e | grep -Ev "LANG|HOSTNAME|JAVA|PWD|HOME|TERM|SHLVL|PATH|GIT|CI_|FF_"); do
    substitution="${substitution}-e s|\${${variable}}|${!variable}|g "
done;
echo "(${substitution::-1})"

echo -e "\nCopying new files"
while IFS= read -r line; do
    echo ${line}
    file=$(echo ${line} | grep -oP 'to\ (.*)(?<!jar)$' | cut -d' ' -f2)
    [[ ! -z ${file} ]] && sed -i ${substitution} ${file} 2>/dev/null
done < <(java -cp "$clients/launcher-builder.jar" com.skcraft.launcher.builder.ServerCopyExport --source "$input/src" --dest "$server" 2>&1)

echo "Updating permissions"
#chmod +rw "$server" -R
chown 1000:1000 "$server" -R

echo -e "\nStarting server!"
docker start ${container} >/dev/null